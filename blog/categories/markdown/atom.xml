<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Markdown | AwAlog]]></title>
  <link href="http://blog.awairo.net/blog/categories/markdown/atom.xml" rel="self"/>
  <link href="http://blog.awairo.net/"/>
  <updated>2013-12-24T03:03:26+09:00</updated>
  <id>http://blog.awairo.net/</id>
  <author>
    <name><![CDATA[alalwww]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[GitHub + Octopress 試してみた]]></title>
    <link href="http://blog.awairo.net/blog/2013/02/17/tried-github-octopress/"/>
    <updated>2013-02-17T08:26:00+09:00</updated>
    <id>http://blog.awairo.net/blog/2013/02/17/tried-github-octopress</id>
    <content type="html"><![CDATA[<p>参考にしたサイト、設定、使い方などをメモ。</p>

<!-- more -->


<h1>なにこれ</h1>

<p><a href="https://github.com">GitHub</a>で<a href="http://octopress.org">Octpress</a>つかってblogっぽいことできるらしいので試してみた。</p>

<p>GitHub はここ見るような人なら知ってると思うので割愛。</p>

<p>Octpressは技術屋が好きそうな感じのCUIベースで静的HTMLを作成する、ブログっぽいウェブサイトの生成ツール的なものだという認識してます。なんか間違ってる気もしますが、とりあえずそういう使い方しかしてないので気にしないことにします。ruby製みたいなので、そこらを触れる人は本体も好きに弄れそう。</p>

<p>で、そのタコプレスがなんか GitHub と連携させれて、HitHubのユーザーIDのサブドメインも使わして貰えるらしいので、ちょっとやってみました。</p>

<p>手順は何番煎じだよって感じなので割愛。(めんどくさい)</p>

<p>なので、使用感とかそっちのほうを少し書いてってみます。</p>

<h2>参考にしたサイトとか</h2>

<ul>
<li><a href="http://tokkonopapa.github.com/blog/2011/12/30/octopress-on-github-and-bitbucket/" title="Octopressのインストールから運用管理まで - T.I.D.">Octopressのインストールから運用管理まで &ndash; T.I.D.</a></li>
<li><a href="http://blog.glidenote.com/blog/2011/11/07/install-octopress-on-github/" title="GithubとOctopressでモダンな技術系ブログを作ってみる - Glide Note - グライドノート">GithubとOctopressでモダンな技術系ブログを作ってみる &ndash; Glide Note &ndash; グライドノート</a></li>
<li><a href="http://mattn.kaoriya.net/software/lang/ruby/20111017205717.htm" title="Big Sky :: githubとjekyllとoctopressで作る簡単でモダンなブログ">Big Sky :: githubとjekyllとoctopressで作る簡単でモダンなブログ</a></li>
</ul>


<p>リポジトリの統合とかはとりあえず読み飛ばしてるけど、とりあえず動いたのでよし。</p>

<p>今度…いつか本気出す…。</p>

<h2>ちなみに環境はこんな感じ</h2>

<p>普段使ってるPCはWin7で、Rubyとかも基本使ったりしてないので未インストール、ってことでサーバー機のVM上で動かしてるSSHサーバーに一式インストールして環境構築しました。</p>

<p>サーバーのOSはCentOS5で、rubyのバージョンとか面倒なこともありましたが、参考にさせてもらったサイトでそのあたり既に解説されてたので特に苦労もなくさくっと環境できあがり。
しかし、記事書くのに TeraTerm で繋いでそこで編集して…ってのは、Vimビームも口からLispもまだ出せそうにはない、にわかのWin勢にはちょっと辛いので、メインPCのほうから記事を編集できる環境を用意してみました。</p>

<p>…といっても、特に手の込んだことはなにもなく、WinSCP で接続してーの、サクラエディタで編集してーの、TeraTermからデプロイを行いーの、っていう実にひねりのない環境。なので割愛。(めんどくさい)</p>

<p>WinSCPに触ったのはかなり久しぶりだけど、なんかダブルクリックで任意のエディタでファイル開けて、保存したら自動でアップロードしてくれる、なかなか使いやすい機能ついててとても便利になってました(前からあったっけ…？)。これだとエクスプローラからファイル操作してるのと殆ど変わらない感じ。</p>

<p>ブラウザから入力とかせずとも、使い慣れたエディタだけでサクサク書けるってのはやっぱいいね。基本ブラウザから書き込むことになる某所のトピックの編集では何度やらかしたことか…。</p>

<h2>設定とか</h2>

<p>とりあえずは _config.yml を弄るくらい。</p>

<p>日時フォーマットとかちょっと微妙かなー、なんて思ってたら、_config.yml にめっちゃ書いてありました。説明書を読まないっぷりがやばい。反省。</p>

<p>GitHub のリポジトリ表示とか、最近のツイート表示なんかも、デフォで連携プラグインが入ってるみたいで、上記設定ファイルを弄るだけで使えます。</p>

<p>他にも、FaceBook のいいねボタン、Google+のなんかのボタン(よく知らない)、<a href="http://disqus.com">Disqus</a> を利用したコメント欄とかもつけれるみたいだけど、アカウント準備面倒だったのでそのうち本気出すってことで先延ばし。</p>

<p>どうせコメントとかつかないので、コメ欄あっても寂しいだけじゃんか｡ﾟ(ﾟ∩´﹏`∩ﾟ)ﾟ｡</p>

<p>もし何かあったら、twitter のほうにでもリプ投げ付けてください。</p>

<h2>テーマとかないの</h2>

<p>あるっちゃあるけど<a href="https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes" title="3rd Party Octopress Themes · imathis/octopress Wiki">公式にあるの</a>はめっちゃ少ないみたい。</p>

<p>いくつか試してみたけど、基本的に日本語向きじゃないし、どうもしっくり来なくてデフォの classic に戻しました。基本的には他のテーマを参考にしたりしつつ、自分の好みに合わせていじってくって方向になりそう。</p>

<p>とはいえセンス的なものが私に未実装なので、いつになるかは…。</p>

<p>探せばもすこし公式にないテーマも見つかる気はするけど、言語の壁が厚くて英語戦闘力2には難易度高そう…。</p>

<h2>記事の投稿とか</h2>

<p>一通りやることやったら、テキストファイルを編集するだけなのでCUIに抵抗がない人だとかなり楽そう。</p>

<p>カレントを octpress に移動して</p>

<pre><code>$ rake new_post["URL用の英語タイトル"]
</code></pre>

<p>こんな感じでコマンド実行すると、ポスト本文のファイルが <code>octpress/source/_posts/</code> 以下に生成される。
あと、生成されるファイルには生成日とかも入ってて、別に「タイトル」である必要はなさそうなので、その火の中で一意になる連番とかそういうのでも問題はないハズ。</p>

<p>あとは生成されたテキストファイルをゴリゴリ編集していくだけで完成。
書式は Markdown。これは、HTML簡単に理解してて、Wiki編集とかやる人だったら割と親しみやすい書式だと思う。基本使うのは見出しと本文とリスト、くらい。<a href="http://blog.2310.net/archives/6" title="blog::2310 » Markdown文法の全訳">このあたり</a>みればすぐ覚えれるくらい簡単。</p>

<p>ってか Markdown は某フォーラムでも使いたいね…。URLの参照すごい便利。</p>

<p>書いた内容の確認は</p>

<pre><code>$ rake preview
</code></pre>

<p>で、ポート4000でプレビュー用のHTTPサーバーが起動するので、<code>http://サーバーIP:4000/</code> でブラウザから直接動かせるサイトにアクセスしながら確認できる。HTMLはリクエスト毎に変更チェックして生成してるみたいで、ブラウザ更新するだけで編集結果が即反映されるから確認がすごい楽ちん。サクラエディタで書いて保存→(WinSCPが勝手にアップロードしてくれる)→ブラウザ更新ボタンを押せば最新プレビュー。やばい。ローカルで静的HTMLファイルを編集してるような感じで作業できるのはすごくいい。</p>

<p>あとは、プレビューサーバーを停止するときは、書いてあるとおりコンソールで<code>Ctrl+C</code>押すだけ。</p>

<p>特に問題なければ、生成してデプロイ(push)しておしまい。</p>

<pre><code>$ rake generate
$ rake deploy
</code></pre>

<p>2つもコマンド打つのがめんどくさかったら、</p>

<pre><code>$ rake gen_deploy
</code></pre>

<p>でやれば生成してpushまでやってくれる。</p>

<p>他にやったことは、ファイル生成のコマンド入力する作業の手抜きのために WinSCP のコマンドで <code>rake new_post['!?title?!']</code> ってやって、新規ポスト作成するように設定追加したくらい。これで記事を起こすとこまではコマンドライン操作なしでできるようになりました。他のもWinSCPからやれないかと画策してみたけど、プレビュー鯖起動とかデプロイは、応答待ちになったり鍵パスが対話式だったりして、WinSCPから直接やるのは難しそうなので、TeraTerm 経由で操作するって感じに落ち着きました。</p>

<h1>てことでblogはじまめした</h1>

<p>環境作って試したりしてみたのは少し前だけど、このまま放置しててもなんかもったいないので、メモ帳代わりに細々となにかしら書いてみようかと思い、記事おこしてみました。</p>

<p>調べたり覚えたりしたことを忘れないようにちゃんと書き残す習慣を身につけれるようになりたい。
そして出来る子アッピルしていきたい。</p>

<p>はてなダイヤリーを1記事で蒸発した経歴の持ち主なので、どうなることやらですが。</p>

<h2>方向性とか</h2>

<p>とりあえず、マイクラModding周りのこととか、お仕事で触ったりしたものとかのメモを残していく方向で。
見た目まわりは改めて少しずついじっていくつもり。いきたい。とりあえずは先延ばし。</p>

<hr />

<p>って寝落ちなど挟みつつ色々弄ってたらもう8時半じゃん…だめじゃん…。</p>
]]></content>
  </entry>
  
</feed>
