<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: eclipse | AwAlog]]></title>
  <link href="http://blog.awairo.net/blog/categories/eclipse/atom.xml" rel="self"/>
  <link href="http://blog.awairo.net/"/>
  <updated>2013-12-23T17:35:07+09:00</updated>
  <id>http://blog.awairo.net/</id>
  <author>
    <name><![CDATA[alalwww]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Minecraft modding その1-1]]></title>
    <link href="http://blog.awairo.net/blog/2013/12/16/minecraft-modding-1/"/>
    <updated>2013-12-16T23:33:00+09:00</updated>
    <id>http://blog.awairo.net/blog/2013/12/16/minecraft-modding-1</id>
    <content type="html"><![CDATA[<p>開発環境を準備しよう。Eclipse導入編。(1)</p>

<!--more-->


<p>特にPC性能に不満がないなら、普通に<a href="http://mergedoc.sourceforge.jp/" title="日本語化されたオールインワンEclipse">Pleiades</a>のJavaをダウンロードしてくればOKです。Modの開発には必要のない、J2EE関連の機能がメインな環境なので、不要なものは沢山入っていますが、動作するなら問題はありません。</p>

<p>でもそれじゃ面白くないので、IDEの理解を深めるためと、極力動作を軽くするために、必要最低限のプラグインだけを導入していくって感じで、環境を準備してみたいと思います。平日はあまり時間がとれないので、数回に分けて書いていく予定。</p>

<p>マイクラのModの作り方とかは、今のところここにはないです。[くまさんWiki][<a href="http://www4.atwiki.jp/reginn666/">http://www4.atwiki.jp/reginn666/</a>]の更新を待機してて、どうぞ。</p>

<h1>ゴール</h1>

<p>Eclipseが起動でき、必要なプラグインが導入されている状態まで。</p>

<p>導入する予定のプラグイン
&ndash; JDT(JavaSE開発環境)
&ndash; Pleiades(動的日本語化プラグイン)
&ndash; EGit(Gitプラグイン)
&ndash; GradleIDE(Forge964以降を見越して)</p>

<ul>
<li>[JStyle]<a href="%E5%85%A8%E8%A7%92%E7%A9%BA%E7%99%BD%E3%82%84%E3%82%BF%E3%83%96%E3%80%81%E6%94%B9%E8%A1%8C%E3%81%AA%E3%81%A9%E3%81%AE%E5%8F%AF%E8%A6%96%E5%8C%96">http://mergedoc.sourceforge.jp/jstyle.html</a></li>
<li>AnyEdit tools</li>
<li>JD-Eclipse Realign</li>
<li>プロパティエディタ</li>
<li>(YMLエディタ)</li>
<li>(markdownエディタ)</li>
<li><p>(Gloovy開発環境)</p></li>
<li><p>CheckStyle</p></li>
<li>FindBugs</li>
</ul>


<p>テスト系
&ndash; QuickJUnit
&ndash; JUnitHelper
&ndash; JMockit plugin</p>

<h1>手順</h1>

<h2>Eclipseのダウンロード</h2>

<p><a href="http://download.eclipse.org/eclipse/downloads/">本家</a>からEclipseをダウンロードしてくるか、<a href="http://mergedoc.sourceforge.jp/" title="日本語化されたオールインワンEclipse">MergeDoc</a>から Pleiades All In One をダウンロードしてくる。</p>

<p>本家のものは、何も入っていないまっさらなEclipseで、Pleiadesは日本語化プラグインとJStyleプラグインが導入済み。日本語化する前提なら、MergeDocでダウンロードした方が手っ取り早いけど、日本語化プラグイン自体がそこそこパフォーマンスを下げるものなので、低スペックPCが前提で、英語に抵抗がないなら、本家から落としてきてもいい。</p>

<h3>本家の場合</h3>

<ol>
<li><a href="http://download.eclipse.org/eclipse/downloads/">Eclipse Project Donwloads</a>の「Latest Downloads」から、「Latest Release」に書いてある一番新しいやつをクリック。</li>
<li>上のほうにあるSDKなどは無視し、中ほどにある「Platform Runtime Binary」から、自分の環境用のPlatformのdownload列のhttpのところをクリック。</li>
<li>メインのダウンロードサーバーと、ミラーサーバーの一覧の画面から、適当に選んでダウンロード。</li>
</ol>


<h3>Pleiadesの場合</h3>

<ol>
<li><a href="http://mergedoc.sourceforge.jp/" title="日本語化されたオールインワンEclipse">MergeDoc</a>から Eclipse 4.3 Kepler を選択。(2013年12月現在の最新)</li>
<li>Platformの自環境用のものをダウンロードする。</li>
</ol>


<p>Platformにおいては、「Full Edition」と「Standard Edition」の違いは、JREがついてくるかどうか程度の差しかない。特に理由がなければFullEditionをダウンロードしよう。</p>

<h2>Eclipseインストール</h2>

<p>といっても実際のところインストーラーなどはなく、任意のフォルダーにファイルを配置するだけ。</p>

<p>とても長い名前のファイルやフォルダーが含まれるので、ドライブ直下などに配置するとよさげ。また、Pleiadesの場合は、ワークスペース設定のデフォルト</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Eclipse起動時に開くSTSのダッシュボードを無効化]]></title>
    <link href="http://blog.awairo.net/blog/2013/12/15/disable-spring-tool-suite-dashboard-on-eclipse-startup/"/>
    <updated>2013-12-15T02:43:00+09:00</updated>
    <id>http://blog.awairo.net/blog/2013/12/15/disable-spring-tool-suite-dashboard-on-eclipse-startup</id>
    <content type="html"><![CDATA[<p>STSのダッシュボードが起動時に開くの邪魔いのでメモ。</p>

<!--more-->


<h1>概要</h1>

<p><a href="http://shootingstar.fm/">星を投げつけるタイプのTwitterクライアント</a>ではなくて、<a href="http://spring.io/tools/sts">SpringToolSuite</a>です。
<img src="/images/posts/2013-12-15-disable-spring-tool-suite-dashboard-on-eclipse-startup/dashbard.png" title="これが起動時毎回でてくるのでちょっと邪魔に感じてた。" alt="ダッシュボードの画像" /></p>

<p>たしかGradleIDEインスコしたとき、Groovyエディタとかもあったほうがいいかなって、Groovyのプラグインを導入したのだけれど、そのときセットで要求されて導入したSTSが、Eclipseの起動時に毎回ダッシュボードを開いてくるので、ちょっと邪魔っぽい。</p>

<p>設定を探すのが面倒だったので<a href="http://goo.gl/kcpQOO">グーグル先生</a>にきいてみた。</p>

<p>一発目でHit。<a href="http://stackoverflow.com/questions/5158116/can-i-disable-the-dashboard-window-when-springsource-tool-suite-starts-up" title="ide - Can I disable the Dashboard window when SpringSource Tool Suite starts up? - Stack Overflow">StackOverflow</a>に書いてあった。備忘録を兼ねてメモ。</p>

<h1>手順</h1>

<p>以下はPleiadesで日本語化されたKepler(Eclipse4.3)での説明。</p>

<ol>
<li>メニューから「ウィンドウ」→「設定」で設定ウィンドウを開く。</li>
<li>「SpringSource」選択。</li>
<li>「Dashboard」選択。</li>
<li>「Show Dashboard On Startup」のチェックを外す。</li>
</ol>


<p><img src="/images/posts/2013-12-15-disable-spring-tool-suite-dashboard-on-eclipse-startup/preferences.png" alt="Eclipseの設定ウィンドウのスクリーンショット" /></p>

<p>おしまい♪</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[java.awt.List とお別れする方法]]></title>
    <link href="http://blog.awairo.net/blog/2013/02/18/ignore-java-awt-list/"/>
    <updated>2013-02-18T01:28:00+09:00</updated>
    <id>http://blog.awairo.net/blog/2013/02/18/ignore-java-awt-list</id>
    <content type="html"><![CDATA[<p>Eclipseの使い方的な内容</p>

<!-- more -->


<h1>Modderあるあるｗｗｗ</h1>

<p>java.util.List が使いたいので、list とタイプして…</p>

<p><img src="/images/posts/2013-02-18-ignore-java-awt-list/2013-02-18-list1.png" alt="listまでタイプしたソースコード画像" /></p>

<p>補完で自動インポートをかけようとすると…</p>

<p><img src="/images/posts/2013-02-18-ignore-java-awt-list/2013-02-18-list2.png" alt="コンテンツアシストに java.util.List と java.awt.List が表示されているソースコード画像" /></p>

<p>java.awt.List…てめーはダメだ！</p>

<p>Eclipse で Java コーディングしてるとき、同じような経験をした事がある人は少なくないと思います。StringUtil(s) クラスあたりは、単純クラス名重複率のトップクラスなんじゃないでしょうか。プロジェクト毎、ライブラリ毎にいたりして、使うのはプロジェクト用のものと決まっているのに、毎度対話を求められたりすると、地味にめんどくさくて気になります。</p>

<h1>使わないクラスはフィルタしちゃおう</h1>

<p>実はちょうど Twitter でこの話題が出てたのと、前から気になってたので、調べてみました。</p>

<h2>参考にしたサイト</h2>

<p><a href="http://d.hatena.ne.jp/Yamashiro0217/20090322/1237707686" title="Yamashiro0217の日記">Eclipse のコード補完 (Complete) で java.awt.List とかを補完候補から除外したい場合の設定 &ndash; Yamashiro0217の日記</a></p>

<p>やっぱ同じこと思う人いますよね。一発でみつかりました。</p>

<h2>設定方法</h2>

<p>すごく簡単。
型フィルタの設定に、除外したいクラスの完全修飾名か、パッケージ名にワイルドカードを付けて追加するだけ。</p>

<ol>
<li>ウィンドウ</li>
<li>設定</li>
<li>Java</li>
<li>外観</li>
<li>型フィルター
<img src="/images/posts/2013-02-18-ignore-java-awt-list/2013-02-18-typefilter.png" alt="型フィルタのウィンドウイメージ" /></li>
</ol>


<p>とりあえず、私は Entity や Point なども除外したかったので、以下を追加しました。</p>

<ul>
<li>java.awt.*</li>
<li>javax.swing.*</li>
<li>org.w3c.dom.*</li>
</ul>


<p><img src="/images/posts/2013-02-18-ignore-java-awt-list/2013-02-18-list3.png" alt="java.awt.Listが表示されなくなったソースコード画像" /></p>

<p>これで邪魔者はいなくなった！</p>

<p>参考にしたサイトにも書いてありましたが、プロジェクト単位での設定ができないので、同一ワークスペース内でプロジェクトごとに変えることができない、ってのが難点ってとこでしょうか。でもまぁそのあたりは、コードテンプレートなんかを駆使し、完全修飾名を補完できるようにしてしまえば、多分困ることはないかなって気がします。</p>

<p>むしろそっちの方がクラスごとにインポートしてるクラスがちがう、なんてことも起きにくくなっていいのかも…？</p>

<hr />

<p>ん…？</p>

<p><img src="/images/posts/2013-02-18-ignore-java-awt-list/2013-02-18-typefilter-example.png" alt="型フィルタのウィンドウイメージ" /></p>

<p>き、きっと &ldquo;a&rdquo; で始まるからだよね…(´・ω・｀)</p>
]]></content>
  </entry>
  
</feed>
