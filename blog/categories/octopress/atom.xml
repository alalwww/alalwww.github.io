<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Octopress | AwAlog]]></title>
  <link href="http://blog.awairo.net/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://blog.awairo.net/"/>
  <updated>2014-01-05T23:28:58+09:00</updated>
  <id>http://blog.awairo.net/</id>
  <author>
    <name><![CDATA[alalwww]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[OctopressのRakefileのカスタマイズ]]></title>
    <link href="http://blog.awairo.net/blog/2014/01/01/customizing-octopress-rakefile/"/>
    <updated>2014-01-01T22:27:00+09:00</updated>
    <id>http://blog.awairo.net/blog/2014/01/01/customizing-octopress-rakefile</id>
    <content type="html"><![CDATA[<p>記事が_posts直下に沢山できてくると邪魔なので、その対策。</p>

<!--more-->


<h1>Rakefileカスタマイズ(記事のディレクトリ分け)</h1>

<p>Octopressの使ってるJekyllの機能らしいですが、_posts以下にサブディレクトリがあっても再帰的に検索して、記事ファイルとして処理してくれるようです。</p>

<p>ただし、ファイル名が<code>yyyy-mm-dd-</code>で始まっていなければいけません。最初、どんなファイルでも行けるのかと思ってファイルのリネームまで行ったところ、記事が全滅してしばらくハマりました。</p>

<p>ともあれ、ディレクトリ分けて整理できるようなので、<code>rake new_post['title']</code>した時に、年月ディレクトリを掘って、そこに月ごとにぶちこんでしまうように、Rakefileを修正しました。</p>

<p>こういう機能もOctopress側に用意されてれば楽なんですけどね。</p>

<p>( っ'ω'c)ﾀﾞﾚｶPRﾀﾞｼﾃｸﾚﾅｲｶﾅ</p>

<h2>やったこと</h2>

<p>(ついでなので、他にも少し設定値などを修正しました。)</p>

<ul>
<li>markdownの拡張子を、"markdown"から"md"に変更。</li>
<li>記事の新規作成時、_posts以下にyyyy-mm形式のディレクトリを作成。</li>
<li>上記で作成したディレクトリに記事作成。</li>
<li>記事を作成した際に、記事用の画像ディレクトリも作成。</li>
</ul>


<p>それだけ。</p>

<h2>変更の差分</h2>

<p><div><script src='https://gist.github.com/8207758.js'></script>
<noscript><pre><code>diff --git a/Rakefile b/Rakefile
index c2f2a78..f9188c8 100644
--- a/Rakefile
+++ b/Rakefile
@@ -22,9 +22,10 @@ blog_index_dir  = 'source'    # directory for your blog's index page (if you put
 deploy_dir      = &quot;_deploy&quot;   # deploy directory (for Github pages deployment)
 stash_dir       = &quot;_stash&quot;    # directory to stash posts for speedy generation
 posts_dir       = &quot;_posts&quot;    # directory for blog files
+posts_images_dir= &quot;images/posts&quot;
 themes_dir      = &quot;.themes&quot;   # directory for blog files
-new_post_ext    = &quot;markdown&quot;  # default new post file extension when using the new_post task
-new_page_ext    = &quot;markdown&quot;  # default new page file extension when using the new_page task
+new_post_ext    = &quot;md&quot;  # default new post file extension when using the new_post task
+new_page_ext    = &quot;md&quot;  # default new page file extension when using the new_page task
 server_port     = &quot;4000&quot;      # port for preview server eg. localhost:4000


@@ -98,8 +99,12 @@ task :new_post, :title do |t, args|
     title = get_stdin(&quot;Enter a title for your post: &quot;)
   end
   raise &quot;### You haven't set anything up yet. First run `rake install` to set up an Octopress theme.&quot; unless File
-  mkdir_p &quot;#{source_dir}/#{posts_dir}&quot;
-  filename = &quot;#{source_dir}/#{posts_dir}/#{Time.now.strftime('%Y-%m-%d')}-#{title.to_url}.#{new_post_ext}&quot;
+  time_now = Time.now
+  post_dir_of_monthly = &quot;#{source_dir}/#{posts_dir}/#{time_now.strftime('%Y-%m')}&quot;
+  mkdir_p post_dir_of_monthly
+  # create dir of post's images
+  mkdir_p &quot;#{source_dir}/#{posts_images_dir}/#{time_now.strftime('%Y/%m/%d')}/#{title.to_url}&quot;
+  filename = &quot;#{post_dir_of_monthly}/#{time_now.strftime('%Y-%m-%d')}-#{title.to_url}.#{new_post_ext}&quot;
   if File.exist?(filename)
     abort(&quot;rake aborted!&quot;) if ask(&quot;#{filename} already exists. Do you want to overwrite?&quot;, ['y', 'n']) == 'n'
   end</code></pre></noscript></div>
</p>

<hr />

<p>画像のURL指定するのもめんどくさいので、そのうち記事に紐づくスクリプトみたいなの噛ますようにしないとかなー。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gravatarのプロフィールを表示するOctopressのサイドバー]]></title>
    <link href="http://blog.awairo.net/blog/2013/12/24/octopress-aside-of-getting-profile-from-gravatar/"/>
    <updated>2013-12-24T02:35:00+09:00</updated>
    <id>http://blog.awairo.net/blog/2013/12/24/octopress-aside-of-getting-profile-from-gravatar</id>
    <content type="html"><![CDATA[<p>つくりました。</p>

<!--more-->


<p>右のAuthorの画像を、Twitterのアイコンを直リンクで参照する、とてもお行儀の悪いものにしていたのですが、Twitterのアイコン画像を更新するとURL変わってしまうので、<a href="http://www.gravatar.com/">Gravatar</a>を参照するように変更してみました。</p>

<p>誰か作ってるだろうと思って、コピペ元を探してみたんですが、<a href="https://github.com/joet3ch/gravatar-octopress">見つけれたの</a>は、設定にメアドを書いたらハッシュ生成して画像を参照するもので、ちょっと思ってたのと違う感じがして、自作に至った感じです。</p>

<p>rubyコードを噛ましたりしてないので、メアドのMD5ハッシュの生成はできないですが。</p>

<h1>用意するもの</h1>

<ul>
<li>GitHubPagesとOctopressの環境</li>
<li>Gravatarアカウント(GitHubでアバター画像を変えてるなら作ってるはず)と、登録時のメアドのMD5ハッシュ</li>
</ul>


<h1>つくりかた</h1>

<p><a href="http://www.gravatar.com/site/implement/profiles/">GravatarがJSONでプロフィール情報を返すAPIを提供している</a>ので、それを使って情報を持ってきて、画面に反映します。</p>

<p>だけ。</p>

<p>具体的には、<a href="https://github.com/alalwww/gravatar-aside/blob/master/gravatar.html">こんなかんじ</a>。</p>

<p>てぬき。</p>

<h1>コピペ</h1>

<p><a href="https://github.com/alalwww/gravatar-aside">GitHubにリポジトリつくった</a>ので、使いたい人がいたらそこからもってってください。MITです。好きにしてください的な感じです。</p>

<p>pluginとか、カスタムasideも、テーマみたいにサブモジュールとしてcloneできるような感じだと、楽なのになー。</p>

<h2>つかいかた</h2>

<ol>
<li><code>gravatar.html</code>を<code>/path/to/octopress-repos/source/_includes/custom/asides/</code>にコピーする。</li>
<li><code>_config.yml</code>を開く。</li>
<li><code>default_asides</code>プロパティの好きな位置に<code>custom/asides/gravatar.html</code>を追加する。</li>
<li>サードパーティ設定のあたりに<code>gravatar_hash</code>プロパティを追加し、Gravatarに登録したEメールのMD5ハッシュを設定する。</li>
<li><code>rake gen_deploy</code>で公開しておしまい。</li>
</ol>


<p>_config.ymlはこんな感じのを足せばいいです</p>

<pre><code>default_asides: [..., custom/asides/gravatar.html, ...]

# Gravatar email hash
gravatar_hash: 0bc83cb571cd1c50ba6f3e8a78ef1346
</code></pre>

<p>※<code>0bc83cb571cd1c50ba6f3e8a78ef1346</code>は<code>myemailaddress@example.com</code>のhashです。</p>

<p>Gravatarのヘルプには、連携アプリ向けの<a href="http://www.gravatar.com/site/implement/hash/">md5ハッシュの生成方法とかも書いてありますが</a>、GitHubのアバター画像のURLとかからでも参照できるので、そっからコピペでOK。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ツイーヨボタン復活]]></title>
    <link href="http://blog.awairo.net/blog/2013/12/14/enable-tweet-button/"/>
    <updated>2013-12-14T14:43:00+09:00</updated>
    <id>http://blog.awairo.net/blog/2013/12/14/enable-tweet-button</id>
    <content type="html"><![CDATA[<p>需要ないと思うけど、設定忘れで消えてたので復活。</p>

<!--more-->


<h1>やったこと</h1>

<p>_config.ymlで有効にしただけ。</p>

<pre><code>twitter_tweet_button: true
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GitHub Pagesで独自ドメインを使う方法]]></title>
    <link href="http://blog.awairo.net/blog/2013/12/14/custom-domain-for-gh-pages/"/>
    <updated>2013-12-14T14:23:00+09:00</updated>
    <id>http://blog.awairo.net/blog/2013/12/14/custom-domain-for-gh-pages</id>
    <content type="html"><![CDATA[<p>ドメインの延長更新のついでに、<a href="http://pages.github.com/">GitHub Pages</a>のカスタムドメインの設定したのでメモ。</p>

<!--more-->


<p><a href="https://help.github.com/articles/setting-up-a-custom-domain-with-pages">公式に書いてある事</a>をそのまま実践するだけのコピペ記事。自分が<a href="http://www.value-domain.com/">VALUE-DOMAIN</a>使ってるので、そこで管理している人には少しだけ役に立てるかもしれない。</p>

<h1>目的</h1>

<ol>
<li><code>http://blog.awairo.net/</code>にアクセスしたら、このblogが表示される。</li>
<li><code>http://alalwww.github.io/</code>にアクセスしたら、<code>http://blog.awairo.net/</code>にリダイレクトされる。</li>
</ol>


<h1>手順</h1>

<p>前提として以下が必要。</p>

<ul>
<li>自分で管理している(DNSの設定がいじれる)独自ドメインを持っている。</li>
<li>GitHub-Pagesを利用しており、公開してるサイトがある。</li>
</ul>


<p>DNSでGH-Pagesに飛ばす設定と、GH-Pagesから独自ドメインにリダイレクトするための設定を行う。設定は順不同だけど、GitHub側の設定が先に反映されると、まだGH-Pagesが表示出来ない状態の独自ドメインにリダイレクトされるようになるので、サービス停止ができないような状況なら、DNSの設定が終わってからやったほうがいいのかもしれない。ただ、どちらも反映に多少の時間がかかるので、しばらく(10分程度)の間アクセスが止まる事に、特に問題がないなら、平行作業しちゃっても問題ない。</p>

<h2>DNS側</h2>

<ol>
<li><code>blog.awairo.net</code>の別名として、<code>alalwww.github.io</code>を設定するための、CNAMEレコードを追加する。</li>
</ol>


<p>だけ。</p>

<p>具体的には、DNSの設定で以下を追加する。</p>

<pre><code>blog.awairo.net. IN CNAME alalwww.github.io.
</code></pre>

<p>検索してると、<a href="http://blog.livedoor.jp/techblog/archives/65340720.html" title="livedoor Techブログ : CNAMEの間違った使い方">CNAMEを設定したDNSでは他の設定が無視される(カモシレナイ)</a>って感じの記事を見つけちゃって、上手くいくのか不安だったけど、とりあえずVALUE-DOMAINではできた。というか、一般的なDNSサーバーなら他の設定の無視もしないと思うので、多分大丈夫だと思うけれど、一応気に留めておこう。( っ'ω'c)</p>

<h3>実際にやったこと</h3>

<p>VALUE-DOMAINのサイトから、専用の書式でCNAMEレコードを追加する。</p>

<ol>
<li>ログイン</li>
<li>DNSレコード/URL転送の変更</li>
<li>ドメイン選択</li>
<li><p>設定フィールドの一番上に、以下を追加。</p>

<p> cname blog alalwww.github.io.</p></li>
</ol>


<p>一番上というか、ワイルドカードで全部xreaのWebサーバーに向けてるAレコードがあるので、それより上に設定追加でうまくいった。一番最後のピリオド(<code>.</code>)は忘れやすいので要注意。</p>

<p>設定したら保存するボタンを押して完了。反映までしばらくかかると思うので(たぶん)、カフェオレをすすりながら待つ。</p>

<h3>確認</h3>

<p>コマンドプロンプトを開いて、<code>nslookup</code>コマンドで自宅のルーターに対し問い合わせて確認。</p>

<pre><code>Microsoft Windows [Version 6.1.7601]
Copyright (c) 2009 Microsoft Corporation.  All rights reserved.

C:\Users\username&gt; nslookup
既定のサーバー:  (ルーター名)
Address:  (ルーターのIP)

&gt;
</code></pre>

<p>反映されてない状態だと以下のような回答。向けてるxreaのウェブサーバーのIPが返ってくる。</p>

<pre><code>&gt; blog.awairo.net
サーバー:  (ルーター名)
Address:  (ルーターのIP)

権限のない回答:
名前:    blog.awairo.net
Address:  203.189.105.98 ← メインで使ってるxreaのサーバーのIP
</code></pre>

<p>しばらくするとこんな感じに変わった。</p>

<pre><code>&gt; blog.awairo.net
サーバー:  (ルーター名)
Address:  (ルーターのIP)

権限のない回答:
名前:    github.map.fastly.net
Address:  103.245.222.133
Aliases:  blog.awairo.net
          alalwww.github.io
</code></pre>

<p>できたっぽい。</p>

<h2>GitHub側</h2>

<ol>
<li>リダイレクト先のURL(<a href="http://blog.awairo.net/">http://blog.awairo.net/</a>)を書いた、「CNAME」というファイル名のテキストファイルを配置する。</li>
</ol>


<p>だけ。</p>

<h3>実際にやったこと</h3>

<p>OctopressのリポジトリをおいてるLinuxサーバーで、以下の作業。</p>

<pre><code>$ cd octopress
$ tee &gt; source/CNAME (リダイレクトしないと標準出力にもでてきてちょっとうざいので)
blog.awairo.net
(改行したあとctrl+Cを押して終了)
$ cat source/CNAME (確認)
blog.awairo.net
$ rake gen_deploy (Push)
</code></pre>

<p>名前が可愛いので<code>tee</code>コマンド好きです。Webにある解説じゃあまり見かけないけれど。ほら、ちょっとした内容のテキストファイル作るのによく見かける、おさわり(<code>touch</code>)してからエディタで開いて編集とかっての、ちょっとめんどくさいし。( っ'ω'c)</p>

<p>デプロイが終わったら、<a href="https://github.com/alalwww/alalwww.github.io">GitHubのリポジトリ</a>を確認してCNAMEファイルがちゃんとデプロイされてたら問題なし。</p>

<h3>確認</h3>

<p>Chromeで<code>F12</code>を押して開発用ツールを開いて、<code>Network</code>タブを選んで、<code>http://alalwww.github.io/</code>にアクセスし、<code>http://blog.awairo.net/</code>にリダイレクトされてる事を確認。
<img src="/images/posts/2013/12/14/custom-domain-for-gh-pages/chrome_devtools.png" alt="ChromeのDeveloperToolsのキャプチャー画像" /></p>

<p>できてるできてる。</p>

<h1>参考にさせて頂いたサイト</h1>

<ul>
<li><a href="http://bekkou68.hatenablog.com/entry/2013/01/05/210902">GitHub Pages に独自のトップレベルドメイン（TLD）を割り当てる &ndash; bekkou68の日記</a></li>
<li><a href="http://setup.value-domain.com/index.php?p=websrv">Easy Setup for VALUE DOMAIN Users</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopressにタグクラウドプラグインを追加]]></title>
    <link href="http://blog.awairo.net/blog/2013/12/09/add-tag-cloud-plugin-on-octopress/"/>
    <updated>2013-12-09T05:11:00+09:00</updated>
    <id>http://blog.awairo.net/blog/2013/12/09/add-tag-cloud-plugin-on-octopress</id>
    <content type="html"><![CDATA[<p>右のサイドバーに、「カテゴリリスト」と「タグクラウド」を追加したのでメモ。</p>

<!--more-->


<h1>タグクラウドプラグインの導入</h1>

<p><a href="http://tokkonopapa.github.io/blog/2012/01/04/octopress-plugin-for-categories-cloud/">このサイト</a>を参考にプラグイン導入。</p>

<h2>手順</h2>

<p>クローンしてきてコピーで導入。</p>

<pre><code>$ ~/git/
$ git clone https://github.com/tokkonopapa/octopress-tagcloud.git octopress-tagcloud
$ cp octopress-tagcloud/plugins ~/octopress/plugins
$ cp octopress-tagcloud/source/_includes/custom/asides/ ~/octopress/source/_includes/custom/asides/
</code></pre>

<p><code>_config.yml</code>の<code>default_asides</code>に追加。</p>

<pre><code>$ cd ~/octopress
$ vi _config.yml
    (追加)
</code></pre>

<p>再生成して確認し問題なさそうなのでDeploy</p>

<pre><code>$ rake generate
$ rake preview
    (動作確認、デザイン確認)
$ rake gen_deploy
</code></pre>

<p>あとは内容に応じて適当に分けてコミットしてって、bitbucketにもpushしておわり。</p>

<p>右側に感じてた違和感っぽいのが減ってきて、それっぽくなった気がするのでとても満足。</p>

<p>いい加減寝ないとまずそう…。</p>
]]></content>
  </entry>
  
</feed>
